cluster:
  power_budget: 232000
  servers:
  - sku: dgx-a100
    count: 40
  - sku: dgx-h100
    count: 0
  interconnects:
  - link: infiniband
    topology: p2p
router:
  overheads:
    routing_delay: 0
  _target_: router.NoOpRouter
arbiter:
  _target_: arbiter.NoOpArbiter
  overheads: {}
hardware_repo:
  processors: configs/hardware_repo/processors
  skus: configs/hardware_repo/skus
  interconnects: configs/hardware_repo/interconnects
model_repo:
  architectures: configs/model_repo/architectures
  sizes: configs/model_repo/sizes
orchestrator_repo:
  allocators: configs/orchestrator_repo/allocators
  schedulers: configs/orchestrator_repo/schedulers
performance_model:
  _target_: performance_model.DatabasePerformanceModel
  db_path: data/perf_model.csv
power_model:
  _target_: power_model.ConstantPowerModel
  idle_power:
    a100-80gb: 63
    h100-80gb: 75
  prompt_power:
    a100-80gb: 400
    h100-80gb: 700
  token_power:
    a100-80gb: 250
    h100-80gb: 380
applications:
- application_id: 0
  model_architecture: bloom-176b
  model_size: bloom-176b-fp16
  allocator: noop
  scheduler: mixed_pool
  overheads: {}
  debug: ${debug}
  _target_: application.Application
trace:
  dir: traces/
  filename: rr_conv_80
  path: ${trace.dir}/${trace.filename}.csv
start_state:
  state_type: splitwise_${start_state.prompt.num_instances}_${start_state.token.num_instances}
  application_id: 0
  split_type: homogeneous
  prompt:
    instance_type: Splitwise
    max_batch_size: 512
    max_batch_tokens: 2048
    max_preemptions: 4
    pipeline_parallelism: 1
    tensor_parallelism: 8
    num_instances: 27
    instance_names:
    - dgx-h100
  token:
    instance_type: Splitwise
    max_batch_size: 512
    max_batch_tokens: 2048
    max_preemptions: 4
    pipeline_parallelism: 1
    tensor_parallelism: 8
    num_instances: 13
    instance_names:
    - dgx-a100
end_time: 86400
debug: false
seed: 0
choices: ${hydra:runtime.choices}
output_dir: results/${seed}/${start_state.state_type}/${trace.filename}/${cluster.servers.0.count}_${cluster.servers.1.count}/${applications.0.model_architecture}/${applications.0.scheduler}
